string Solution::fractionToDecimal(long a, long b) {
    string res = "" ;
    if(a == 0){
        return "0" ;
    }
    
    long initital = a/b ;
    long sign = ((a < 0) ^ (b < 0))?-1:1 ;
    
    a = abs(a);
    b = abs(b);
    if(sign == -1){
        res += "-" ;
    }
    res += to_string(initital);
    
    long rem = a%b ;
    if(rem == 0){
        return res ;
    }
    
    bool isrepeated = false ; 
    long idx ;
    unordered_map<long,long> memo ;
    res += "." ;
    while(rem > 0){
        if(memo.find(rem) != memo.end()){
            isrepeated = true ;
            idx =memo[rem];
            break ;
        }
        else
            memo[rem] = res.size();
        
        rem = rem*10 ;
        res += to_string(rem/b) ;
        
        rem = rem%b ;
    }
    if(isrepeated){
        res += ")";
        res.insert(idx , "(");
    }
    
    return res ;
}
